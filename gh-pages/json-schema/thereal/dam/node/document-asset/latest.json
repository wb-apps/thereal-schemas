{
  "id": "https://schemas.thereal.com/json-schema/thereal/dam/node/document-asset/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:thereal:dam:node:document-asset:1-0-0"
    },
    "_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())",
      "pbj": {
        "type": "identifier",
        "rule": "single",
        "overridable": true
      }
    },
    "status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "published",
        "scheduled",
        "pending",
        "draft",
        "expired",
        "archived",
        "deleted"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "creator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user.",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "updated_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single",
        "useTypeDefault": false
      }
    },
    "updater_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "last_event_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "display_title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "mime_type": {
      "type": "string",
      "pattern": "^[\\w-]+\\/[\\w\\+\\.-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "file_size": {
      "type": "integer",
      "default": 0,
      "minimum": -2147483648,
      "maximum": 2147483647,
      "description": "The file size in bytes.",
      "pbj": {
        "type": "big-int",
        "rule": "single"
      }
    },
    "file_etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "description": "An etag created from the file itself. The file etag is different from the node's etag because the node tracks metadata, which can be updated without the file being changed.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 5000,
      "description": "A description of the asset (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social.",
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "credit": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "A credit is a short string used to publicly acknowledge the source/creator of the asset. e.g. \"Fox News\", \"CNN\".",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "credit_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "A URL to link to the credit source.",
      "pbj": {
        "type": "text",
        "rule": "single",
        "format": "url"
      }
    },
    "cta_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "Call to action text. e.g. \"Click here\"",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "cta_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "A URL to link with the call to action text.",
      "pbj": {
        "type": "text",
        "rule": "single",
        "format": "url"
      }
    },
    "linked_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "description": "A set of node refs which have been linked to this asset.",
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "gallery_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A node ref referencing the gallery where the asset is used.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "gallery_seq": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 4294967295,
      "description": "An integer value representing the order in which this asset will appear in a gallery.",
      "pbj": {
        "type": "int",
        "rule": "single"
      }
    },
    "tags": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456.",
      "pbj": {
        "type": "string",
        "rule": "map"
      }
    },
    "expires_at": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "primary_person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "hashtags": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "string",
        "rule": "set",
        "format": "hashtag"
      }
    }
  },
  "required": [
    "_schema",
    "_id",
    "mime_type"
  ],
  "additionalProperties": false
}
