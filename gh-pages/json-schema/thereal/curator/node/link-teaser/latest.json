{
  "id": "https://schemas.thereal.com/json-schema/thereal/curator/node/link-teaser/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:thereal:curator:node:link-teaser:1-0-0"
    },
    "_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())"
    },
    "status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "published",
        "scheduled",
        "pending",
        "draft",
        "expired",
        "archived",
        "deleted"
      ]
    },
    "etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$"
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$"
    },
    "creator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user."
    },
    "updated_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$"
    },
    "updater_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\""
    },
    "last_event_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\""
    },
    "title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255
    },
    "order_date": {
      "type": "string",
      "format": "date-time",
      "description": "Determines the sequence that this teaser node will be rendered in lists, search results, etc. It DOES NOT control visibility or publishing. A date was used over an integer (e.g. seq_no) for blog-like, reverse chronological, clarity in sorting."
    },
    "slotting": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "maximum": 255
        }
      },
      "additionalProperties": false,
      "description": "A map of integers, e.g. {home: 1, sports: 5, tv: 9}, that determine where teasers will render in lists that use slotting. We call it slotting vs sticky or pinning as that is generally just one at a time."
    },
    "image_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the image asset to use for widgets, sharing, seo."
    },
    "description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 5000,
      "description": "A description of the teaser (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social."
    },
    "caption": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "Text to be used to caption the teaser."
    },
    "cta_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "Text to be used for the call to action."
    },
    "credit": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "Text to be used to credit the teaser source."
    },
    "credit_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "URL to be used to link to the teaser source."
    },
    "gallery_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "timeline_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "link_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
    },
    "partner_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
    },
    "partner_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255
    },
    "tags": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456."
    },
    "expires_at": {
      "type": "string",
      "format": "date-time"
    },
    "published_at": {
      "type": "string",
      "format": "date-time"
    },
    "sponsor_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "ads_enabled": {
      "type": "boolean",
      "default": true
    },
    "dfp_ad_unit_path": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "dfp_cust_params": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false
    },
    "seo_title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255
    },
    "seo_image_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the image asset to use for SEO instead of the usual image_ref."
    },
    "seo_published_at": {
      "type": "string",
      "format": "date-time",
      "description": "Allows customization of the publish date for SEO purposes."
    },
    "seo_updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Allows customization of the updated date for SEO purposes. For example if something meaningful is updated this date should be used instead of the node's normal updated_at field which accounts for every change."
    },
    "meta_description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 5000
    },
    "meta_keywords": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false
    },
    "is_unlisted": {
      "type": "boolean",
      "description": "Unlisted content will not show up in any search results but can still be viewed if you know the URL."
    },
    "swipe": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "A swipe (aka banner/label/overlay) is a short string used in a visual treatment on the node. e.g. \"Exclusive\", \"NSFW\", \"Breaking Bad Mojo\"."
    },
    "theme": {
      "type": "string",
      "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
      "minLength": 0,
      "maxLength": 255,
      "description": "A string used to indicate that a visual treatment should be applied to a piece of content, e.g. \"christmas\" or \"taco\"."
    },
    "primary_person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false
    },
    "person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false
    },
    "category_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false
    },
    "channel_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$"
    },
    "hashtags": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false
    }
  },
  "required": [
    "_schema",
    "_id",
    "link_url"
  ],
  "additionalProperties": false
}