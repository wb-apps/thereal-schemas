{
  "id": "https://schemas.thereal.com/json-schema/thereal/ovp/node/video/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_schema": {
      "type": "string",
      "pattern": "^pbj:([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+):([0-9]+-[0-9]+-[0-9]+)$",
      "default": "pbj:thereal:ovp:node:video:1-0-0"
    },
    "_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "The \"_id\" value: - MUST NOT change for the life of the node. - SHOULD be globally unique - SHOULD be generated by the app (ideally in default value closure... e.g. UuidIdentifier::generate())",
      "pbj": {
        "type": "identifier",
        "rule": "single",
        "overridable": true
      }
    },
    "status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "published",
        "scheduled",
        "pending",
        "draft",
        "expired",
        "archived",
        "deleted"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "creator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user.",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "updated_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single",
        "useTypeDefault": false
      }
    },
    "updater_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "last_event_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "image_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the image asset to use for widgets, sharing, seo.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "poster_image_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the image asset to use as the poster.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "is_live": {
      "type": "boolean",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "live_m3u8_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "URL to the m3u8 for the live stream.",
      "pbj": {
        "type": "text",
        "rule": "single",
        "format": "url"
      }
    },
    "is_full_episode": {
      "type": "boolean",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "is_promo": {
      "type": "boolean",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "launch_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "duration": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 65535,
      "description": "Duration of the video in seconds.",
      "pbj": {
        "type": "small-int",
        "rule": "single"
      }
    },
    "has_music": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 2,
      "pbj": {
        "type": "trinary",
        "rule": "single"
      }
    },
    "allow_comments": {
      "type": "boolean",
      "default": true,
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "sharing_enabled": {
      "type": "boolean",
      "default": true,
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 5000,
      "description": "A description of the video (usually a few sentences). It should typically not have HTML as it is used in metadata, feeds, SERP and social.",
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "credit": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "A credit is a short string used to publicly acknowledge the source/creator of the video. e.g. \"Fox News\", \"CNN\".",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "recommendations_enabled": {
      "type": "boolean",
      "default": true,
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "show_related_videos": {
      "type": "boolean",
      "description": "Determines if the related videos should render. This is intended as a flag on blogroll/lists, not the permalink of a video where you'd always expect to see the related videos.",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "related_videos_heading": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "related_video_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "list"
      }
    },
    "caption_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the caption asset in DAM for this video.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "caption_urls": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        }
      },
      "additionalProperties": false,
      "description": "URL to the caption file keyed by the language code, e.g. \"en\", \"fr\".",
      "pbj": {
        "type": "text",
        "rule": "map",
        "format": "url"
      }
    },
    "tvpg_rating": {
      "type": "string",
      "enum": [
        "unknown",
        "TV-G",
        "TV-MA",
        "TV-PG",
        "TV-Y",
        "TV-Y7",
        "TV-Y7-FV",
        "TV-14"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "mezzanine_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "URL to the mezzanine video asset.",
      "pbj": {
        "type": "text",
        "rule": "single",
        "format": "url"
      }
    },
    "mezzanine_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the mezzanine asset in DAM for this video.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "source_urls": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$"
        }
      },
      "additionalProperties": false,
      "description": "URL to the playable sources keyed by the type, e.g. \"hls\", \"mp4\".",
      "pbj": {
        "type": "text",
        "rule": "map",
        "format": "url"
      }
    },
    "mpm": {
      "type": "string",
      "pattern": "^[\\w\\.-]+$",
      "description": "A tracking code for video clips that is used to correlate various metrics with payouts to talent in the clip.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "original_air_date": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "show": {
      "type": "string",
      "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "slug"
      }
    },
    "audio_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the audio asset for this video.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "youtube_video_id": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "youtube_custom_id": {
      "type": "string",
      "pattern": "^[\\w@#-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "kaltura_entry_id": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "kaltura_partner_id": {
      "type": "string",
      "pattern": "^[\\w-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "kaltura_sync_enabled": {
      "type": "boolean",
      "default": true,
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "kaltura_synced_at": {
      "type": "integer",
      "minimum": -2147483648,
      "maximum": 2147483647,
      "description": "Timestamp when the entry was last synced with Kaltura.",
      "pbj": {
        "type": "timestamp",
        "rule": "single",
        "useTypeDefault": false
      }
    },
    "kaltura_mp4_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "URL to the source mp4 (generally a high-res/mezzanine file).",
      "pbj": {
        "type": "text",
        "rule": "single",
        "format": "url"
      }
    },
    "kaltura_metadata": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "minLength": 0,
          "maxLength": 65535
        }
      },
      "additionalProperties": false,
      "description": "A map containing the metadata profile values for the entry.",
      "pbj": {
        "type": "text",
        "rule": "map"
      }
    },
    "kaltura_flavors": {
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/flavor"
        }
      ],
      "additionalProperties": false,
      "pbj": {
        "type": "message",
        "rule": "list"
      }
    },
    "labels": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "description": "A set of strings used for categorization or workflow. Similar to slack channels, github or gmail labels.",
      "pbj": {
        "type": "string",
        "rule": "set"
      }
    },
    "tags": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "description": "Tags is a map that categorizes data or tracks references in external systems. The tags names should be consistent and descriptive, e.g. fb_user_id:123, salesforce_customer_id:456.",
      "pbj": {
        "type": "string",
        "rule": "map"
      }
    },
    "expires_at": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "published_at": {
      "type": "string",
      "format": "date-time",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "slug": {
      "type": "string",
      "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
      "minLength": 0,
      "maxLength": 255,
      "description": "The \"slug\" is a secondary identifier, typically used in a url: - MUST be url friendly - SHOULD NOT be case sensitive - SHOULD be unique within the message curie namespace - CAN be changed, but in practice once nodes are published you should avoid it if possible",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "slug"
      }
    },
    "sponsor_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "ads_enabled": {
      "type": "boolean",
      "default": true,
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "dfp_ad_unit_path": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "dfp_cust_params": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z_]{1}[\\w\\.:-]+$": {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      },
      "additionalProperties": false,
      "pbj": {
        "type": "string",
        "rule": "map"
      }
    },
    "seo_title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "seo_image_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "description": "A reference to the image asset to use for SEO instead of the usual image_ref.",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "seo_published_at": {
      "type": "string",
      "format": "date-time",
      "description": "Allows customization of the publish date for SEO purposes.",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "seo_updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Allows customization of the updated date for SEO purposes. For example if something meaningful is updated this date should be used instead of the node's normal updated_at field which accounts for every change.",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "meta_description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 5000,
      "pbj": {
        "type": "text",
        "rule": "single"
      }
    },
    "meta_keywords": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "string",
        "rule": "set"
      }
    },
    "is_unlisted": {
      "type": "boolean",
      "description": "Unlisted content will not show up in any search results but can still be viewed if you know the URL.",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "swipe": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "A swipe (aka banner/label/overlay) is a short string used in a visual treatment on the node. e.g. \"Exclusive\", \"NSFW\", \"Breaking Bad Mojo\".",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "related_teasers_heading": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "related_teaser_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "order_date": {
      "type": "string",
      "format": "date-time",
      "description": "Determines the sequence that this teaserable node will be rendered in lists, search results, etc. It DOES NOT control visibility or publishing. A date was used over an integer (e.g. seq_no) for blog-like, reverse chronological, clarity in sorting.",
      "pbj": {
        "type": "date-time",
        "rule": "single"
      }
    },
    "primary_person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "person_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "category_refs": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "pattern": "^[\\w\\/\\.:-]+$"
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "identifier",
        "rule": "set"
      }
    },
    "channel_ref": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single"
      }
    },
    "hashtags": {
      "type": "array",
      "items": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        }
      ],
      "uniqueItems": true,
      "additionalProperties": false,
      "pbj": {
        "type": "string",
        "rule": "set",
        "format": "hashtag"
      }
    }
  },
  "required": [
    "_schema",
    "_id"
  ],
  "definitions": {
    "flavor": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "https://schemas.thereal.com/json-schema/triniti/ovp.kaltura/flavor/1-0-0.json#"
        }
      ]
    }
  },
  "additionalProperties": false
}
